version: '3'

services:
  user_service:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=user_db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=db_user
      - DB_PORT=5432
    volumes:
      - ./UserService:/usr/src/app
    depends_on:
      - db_user
      - redis
    networks:
      - app-network

  task_service:
    build:
      context: ./TaskService
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=task_db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=db_task
      - DB_PORT=5433
    volumes:
      - ./TaskService:/usr/src/app
    depends_on:
      - db_task
      - redis
    networks:
      - app-network

  notification_service:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=notification_db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=db_notification
      - DB_PORT=5434
    volumes:
      - ./NotificationService:/usr/src/app
    depends_on:
      - db_notification
      - redis
    networks:
      - app-network

  db_user:
    image: postgres:12
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - app-network

  db_task:
    image: postgres:12
    environment:
      POSTGRES_DB: task_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5433"
    networks:
      - app-network

  db_notification:
    image: postgres:12
    environment:
      POSTGRES_DB: notification_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5434"
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - user_service
      - task_service
      - notification_service
    networks:
      - app-network

  loki:
    image: grafana/loki:2.7.1
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - loki
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
